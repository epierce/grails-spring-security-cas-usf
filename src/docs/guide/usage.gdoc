{note}
This guide assumes that you are using authtest.it.usf.edu for development and testing and webauth.usf.edu for production
{note}

[CAS|http://www.jasig.org/cas] is a popular single sign-on implementation. It's open source(Apache license) and is easy to get started with but is also highly configurable. In addition it has clients written in Java, .Net, PHP, Perl, and other languages.

There isn't much that you need to do in your application to be a CAS client. Just install this plugin, run the configuration script, and modify any of the default values you want in Config.groovy. These are described in detail in [configuration|guide:configuration] but in most cases, you won't need to change anything during development.

h4. Installation
Download the latest version of the plugin zip file from [GitHub|https://github.com/epierce/grails-spring-security-cas-usf/raw/master/spring-security-cas-usf-1.3.0.zip], drop it into the @lib@ directory of your Grails project and update @grails-app/conf/BuildConfig.groovy@:
{code}
  plugins {
        compile ":spring-security-core:1.2.7.3"
        compile ":spring-security-cas-usf:1.3.0"
  }
{code}

h4. grails usf-cas-config
After you have installed the plugin, run this command to add the necessary configuration options:

{code}
grails usf-cas-config
{code}

The following lines will be added to your Config.groovy:

{code}
grails.plugins.springsecurity.userLookup.userDomainClassName = 'edu.usf.cims.UsfCasUser'
grails.plugins.springsecurity.cas.active = true
grails.plugins.springsecurity.cas.sendRenew = false
grails.plugins.springsecurity.cas.key = 'a5e3051a58a742948f80a6ff83d51ac' //unique value for each app
grails.plugins.springsecurity.cas.artifactParameter = 'ticket'
grails.plugins.springsecurity.cas.serviceParameter = 'service'
grails.plugins.springsecurity.cas.filterProcessesUrl = '/j_spring_cas_security_check'
grails.plugins.springsecurity.cas.proxyCallbackUrl = 'http://localhost:8080/${appName}/secure/receptor' 
grails.plugins.springsecurity.cas.proxyReceptorUrl = '/secure/receptor'
grails.plugins.springsecurity.cas.useSingleSignout = false
grails.plugins.springsecurity.cas.driftTolerance = 120000
grails.plugins.springsecurity.cas.loginUri = '/login'
grails.plugins.springsecurity.cas.useSamlValidator = true
grails.plugins.springsecurity.cas.authorityAttribute = 'eduPersonEntitlement'
grails.plugins.springsecurity.cas.serverUrlPrefix = 'https://authtest.it.usf.edu'
grails.plugins.springsecurity.cas.serviceUrl = 'http://localhost:8080/${appName}/j_spring_cas_security_check'
{code}

h4. Moving to a Test or Production server

Once you have tested your app on localhost and are ready to run `grails war`, open a support ticket in [ServiceNow|http://usffl.service-now.com] and include the following information:

* Short Description: _SSO Project: Application Name_
* Your Name
* Your Email address
* Office phone number
* Application Name
* Short description of the service
* Value used for @grails.plugins.springsecurity.cas.serviceUrl@
* List of attributes that need to be released
